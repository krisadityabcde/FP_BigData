version: '3.8'

services:
  # Zookeeper - Required for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - bigdata-network

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - bigdata-network

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - bigdata-network
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9090:9090"  # Console port changed to 9090
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9090"
    volumes:
      - minio-data:/data
    networks:
      - bigdata-network
    restart: unless-stopped

  # Hive Metastore with MariaDB
  # Using MariaDB as the backend for Hive Metastore
  mariadb:
    image: mariadb:10.6
    container_name: hive-mariadb
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: hive_metastore
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./scripts/init-hive-db.sql:/docker-entrypoint-initdb.d/init-hive-db.sql
    networks:
      - bigdata-network
    restart: unless-stopped

  hive-metastore:
    hostname: hive-metastore
    image: 'bitsondatadev/hive-metastore:latest'
    container_name: hive-metastore
    ports:
      - '9083:9083'
    volumes:
      - ./conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      METASTORE_DB_HOSTNAME: mariadb
      METASTORE_DB_USERNAME: admin
      METASTORE_DB_PASSWORD: admin
      METASTORE_DB_NAME: hive_metastore
      # Add MinIO environment variables
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_S3_ENDPOINT: http://minio:9000
    depends_on:
      - mariadb
      - minio
    networks:
      - bigdata-network
    restart: unless-stopped

  # Data Producer Service
  data-producer:
    build:
      context: ./services/data-producer
      dockerfile: Dockerfile
    container_name: data-producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_TOPIC: hospital-data
      KAGGLE_USERNAME: ${KAGGLE_USERNAME}
      KAGGLE_KEY: ${KAGGLE_KEY}
    volumes:
      - ./data:/app/data
      - ./services/data-producer:/app
    networks:
      - bigdata-network

  # Data Consumer Service (Kafka to MinIO)
  data-consumer:
    build:
      context: ./services/data-consumer
      dockerfile: Dockerfile
    container_name: data-consumer
    depends_on:
      - kafka
      - minio
    ports:
      - "5000:5000"  # Add port for REST API
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_TOPIC: hospital-data
      KAFKA_GROUP_ID: hospital-data-consumer
      MINIO_ENDPOINT: minio:9000
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: hospital-data
    volumes:
      - ./services/data-consumer:/app
    networks:
      - bigdata-network

  # Streamlit Monitor Service
  streamlit-monitor:
    build:
      context: ./services/streamlit-monitor
      dockerfile: Dockerfile
    container_name: streamlit-monitor
    depends_on:
      - data-consumer
    ports:
      - "8501:8501"
    volumes:
      - ./services/streamlit-monitor:/app
    networks:
      - bigdata-network

  # Apache Hive Test Service
  # Masih Testing Sabar Dlu
  # hive-test:
  #   build:
  #     context: ./services/hive-test
  #     dockerfile: Dockerfile
  #   container_name: hive-test
  #   depends_on:
  #     - hive-metastore
  #     - minio
  #   environment:
  #     HIVE_METASTORE_URI: thrift://hive-metastore:9083
  #     MINIO_ENDPOINT: minio:9000
  #     MINIO_ROOT_USER: ${MINIO_ROOT_USER}
  #     MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
  #   volumes:
  #     - ./services/hive-test:/app
  #   networks:
  #     - bigdata-network
  


networks:
  bigdata-network:
    driver: bridge

volumes:
  kafka-data:
  zookeeper-data:
  minio-data:
  mariadb_data: